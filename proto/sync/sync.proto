/*
Copyright (C) BABEC. All rights reserved.
Copyright (C) THL A29 Limited, a Tencent company. All rights reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";
option java_package = "org.chainmaker.pb.sync";
option go_package = "chainmaker.org/chainmaker/pb-go/v2/sync";
package sync;

import "common/block.proto";

// network message of synchronization module
message SyncMsg {
  // sync message type
  MsgType type  = 1;

  // payload for the message
  bytes payload = 2;

  // specific syncblockmessage types
  enum MsgType {
    NODE_STATUS_REQ = 0;
    NODE_STATUS_RESP = 1;
    BLOCK_SYNC_REQ = 2;
    BLOCK_SYNC_RESP = 3;
  }
}

// response message for node status
message BlockHeightBCM {
  uint64 block_height = 1;
  uint64 archived_height = 2;
}

// block request message
message BlockSyncReq {
  uint64 block_height = 1;
  uint64 batch_size = 2;
  bool with_rwset = 3;
}

// batch blocks
message BlockBatch {
  repeated common.Block batches = 1;
}

// information of batch blocks
message BlockInfoBatch {
  repeated common.BlockInfo batch = 1;
}

// block response message
message SyncBlockBatch {
  oneof data {
    // the response structure returned when requesting block data
    BlockBatch block_batch = 1;

    // when requesting a block and its read / write set data
    BlockInfoBatch blockinfo_batch = 2;
  }
  bool with_rwset = 3;
}
